Routing Requests
===========================================
Goal
1. Gumawa ng mga routes para sa navigation.
2. Gamit ang mga handlers pwede kang mag specify ng location.
3. Make sure lahat ng loopholes pagdating sa mga url ay na cover.
4. Gamit ang chosenHandler ito ay ang magbibigay ng status sa client kung ito ba ay 200 o 404.
5. Convert ang payload sa string
===========================================

1. Sa ganitong pagkakataon kung saan unique ang gagawin nating mga links para sa navigation mas okay ito kung gagamit tayo ng object.
2. handlers -> Container ng ating mga links para sa user navigation base sa kanilang request.
3. handlers.sample -> May dalawang parameter na data at callback. si callback ay function. nagpasa lang tayo ng dalawang parameter para dito.
Note: Pwede kahit ilang parameter. basta malagyan ito ng mga value. At ang unang parameter natin ay Status code at ang pangalawa ay payload.
4. handlers.notFound -> Mag callback lang tayo ng 404.
5. let chosenHandler -> Ito ang magchecheck kung ang request route ni user ay available o hindi.
6. let data -> ito ang response natin sa valid na route.
7. chosenHandler parameters, data(variable), Statuscode - 200, 404, etc, payload kung meron.
8. statusCode initialization -> ito ang mag ve-verify kung success o not found.
9. Remember na ang payload ay isang object, at kung sakaling wala mang binigay na payload ang user e i default nya lang ito sa empty object.

Excepted Output:
Lahat ng links ay may kanya kanyang response.


I-test ang program:
1. I-run ang program : node index.js
2. Buksan ang Postman.
3. Maglagay ng key value para sa header.
4. maglagay ng url path.
5. Gumawa ng query String.
6. Sa Halip na get Gawin mong Post
7. Piliin ang raw sa body Maglagay ng laman sa textbox.
8. Check mo ang result sa terminal.
9. Run again pero this time ilagay mo si sample route.
